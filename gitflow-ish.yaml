stages:
  - build
  - build_and_push
  - update-manifests-non-production
  - promote-to-stable
  - update-manifests-production

# Include the external CI template
include:
  - project: 'your-org/ci-templates'
    file: '/update-manifests.yml'
  - project: 'your-org/ci-templates'
    file: '/build_and_push.yml'

# Automatically Build and Push to Scratch Repository
auto-push-scratch:
  extends: .build_and_push_template  # Use the build_and_push_template
  variables:
    ARTIFACTORY_DOCKER_REPOSITORY: "scratch"  # Scratch repository
    ARTIFACTORY_SUFFIX: ".artifactory.com"
    IMAGE_NAME_AND_TAG: "$ARTIFACTORY_DOCKER_REPOSITORY.$ARTIFACTORY_SUFFIX/$CI_PROJECT_NAME:$CI_COMMIT_SHORT_SHA"
    DOCKERFILE_PATH: "Dockerfile"
  only:
    - develop  # Automatically triggered for develop branch
  when: always  # Always run when code is pushed to develop

# Manually Build and Push to Staging Repository
manual-push-staging:
  extends: .build_and_push_template  # Use the build_and_push_template
  variables:
    ARTIFACTORY_DOCKER_REPOSITORY: "staging"  # Staging repository
    ARTIFACTORY_SUFFIX: ".artifactory.com"
    IMAGE_NAME_AND_TAG: "$ARTIFACTORY_DOCKER_REPOSITORY.$ARTIFACTORY_SUFFIX/$CI_PROJECT_NAME:$CI_COMMIT_SHORT_SHA"
    DOCKERFILE_PATH: "Dockerfile"
  only:
    - develop  # Only run on develop branch
  when: manual  # Manual trigger for staging push

# Update Manifests for Development Environment (Automatic)
update-manifests-development:
  extends: .update-manifests
  variables:
    ENVIRONMENT: "development"
    ZONE: "intranet"
  only:
    - develop
  when: always  # Runs automatically when commit happens on develop

# Update Manifests for Integration Environment (Manual Push)
update-manifests-integration:
  extends: .update-manifests
  variables:
    ENVIRONMENT: "integration"
    ZONE: "intranet"
  only:
    - develop
  when: manual  # Manual trigger for integration update

# Promote Image to Stable Repository (Merge Request Pipeline) - Manual
promote-to-stable:
  stage: promote-to-stable
  image: curlimages/curl:latest
  script:
    - echo "Promoting image to stable repository via API..."
    - |
      curl -X POST "$PROMOTION_API_URL" \
        -H "Content-Type: application/json" \
        -d '{
          "source_repo": "scratch-repo",
          "image_name": "$IMAGE_NAME",
          "tag": "$CI_COMMIT_SHORT_SHA"
        }'
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"
  when: manual  # Manual trigger for promotion

# Update Manifests for Production Environment (Merge Request to Master) - Manual
update-manifests-production:
  extends: .update-manifests
  variables:
    ENVIRONMENT: "production"
    ZONE: "intranet"
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"
  when: manual  # Manual trigger for production update
