stages:
  - build
  - update-manifests-non-production
  - promote-to-stable
  - update-manifests-production

# Automatically Build and Push to Scratch Repository
auto-push-scratch:
  stage: build
  image: docker:latest
  script:
    - echo "Automatically building and pushing to scratch repository..."
    - docker build -t $IMAGE_NAME:$CI_COMMIT_SHORT_SHA .
    - docker tag $IMAGE_NAME:$CI_COMMIT_SHORT_SHA scratch-repo/$IMAGE_NAME:$CI_COMMIT_SHORT_SHA
    - docker push scratch-repo/$IMAGE_NAME:$CI_COMMIT_SHORT_SHA
  only:
    - develop

# Manually Build and Push to Staging Repository
manual-push-staging:
  stage: build
  image: docker:latest
  script:
    - echo "Manually building and pushing to staging repository..."
    - docker build -t $IMAGE_NAME:$CI_COMMIT_SHORT_SHA .
    - docker tag $IMAGE_NAME:$CI_COMMIT_SHORT_SHA staging-repo/$IMAGE_NAME:$CI_COMMIT_SHORT_SHA
    - docker push staging-repo/$IMAGE_NAME:$CI_COMMIT_SHORT_SHA
  only:
    - develop
  when: manual

# Include the external CI template with the update-manifests job
include:
  - project: 'your-org/ci-templates'
    file: '/update-manifests.yml'

# Update Manifests for Development Environment (Automatic)
update-manifests-development:
  extends: .update-manifests
  variables:
    ENVIRONMENT: "development"
  only:
    - develop  # Automatically on develop branch
  when: always  # Runs automatically when commit happens on develop

# Update Manifests for Integration Environment (Manual)
update-manifests-integration:
  extends: .update-manifests
  variables:
    ENVIRONMENT: "integration"
  only:
    - develop  # Runs only on develop branch
  when: manual  # Manual trigger for integration

# Promote Image to Stable Repository (Merge Request Pipeline) - Manual
promote-to-stable:
  stage: promote-to-stable
  image: curlimages/curl:latest
  script:
    - echo "Promoting image to stable repository via API..."
    - |
      curl -X POST "$PROMOTION_API_URL" \
        -H "Content-Type: application/json" \
        -d '{
          "source_repo": "scratch-repo",
          "image_name": "$IMAGE_NAME",
          "tag": "$CI_COMMIT_SHORT_SHA"
        }'
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"
  when: manual  # Manual trigger for promotion

# Update Manifests for Production Environment (Merge Request to Master) - Manual
update-manifests-production:
  extends: .update-manifests
  variables:
    ENVIRONMENT: "production"
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master"  # Runs on merge requests to master
  when: manual  # Manual trigger for production update
